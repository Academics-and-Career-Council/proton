version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    dns: 1.1.1.1
    ports:
     - "5514:5140/udp"
    volumes:
      # Forwards the local Docker socket to the container.
      - /var/run/docker.sock:/var/run/docker-host.sock 
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/workspace:cached

    # Overrides default command so things don't shut down after the process ends.
    entrypoint: /usr/local/share/docker-init.sh
    command: sleep infinity 
    networks:
      - intranet

    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
    # cap_add:
    #  - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Uncomment the next line to use a non-root user for all processes.
    # user: vscode

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)
  kratos:
    image: oryd/kratos:v0.7.6-alpha.1-sqlite
    restart: unless-stopped
    environment:
      - DSN=memory
    command: serve -c /etc/config/kratos/kratos.yml --dev
    volumes:
      - type: bind
        source: ./kratos
        target: /etc/config/kratos
    ports:
      - "4434:4434"
    depends_on:
      - app
    logging:
      driver: syslog
      options:
        syslog-address: "udp://host.docker.internal:5514"
        syslog-format: "rfc5424"
        tag: kratos
    #dns: 1.1.1.1
    networks:
      - intranet
  rabbitmq:
    image: rabbitmq:3-management-alpine
    #container_name: rabbitmq
    ports:
        - "5672:5672"
        - "15672:15672"
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - intranet
    #dns: 1.1.1.1
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 10s
      retries: 3
  trigger-batch-process-job:
    build: .
    environment:
      - RMQ_USER=${RABBITMQ_DEFAULT_USER:-admin}
      - RMQ_PASS=${RABBITMQ_DEFAULT_PASS:-admin}
      - RMQ_HOST=${RABBITMQ_DEFAULT_HOST:-rabbitmq}
      - RMQ_PORT=${RABBITMQ_DEFAULT_PORT:-5672}
    depends_on:
      rabbitmq:
        condition: service_healthy
networks:
  intranet:
    driver: bridge
